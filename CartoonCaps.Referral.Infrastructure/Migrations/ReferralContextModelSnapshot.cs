// <auto-generated />
using CartoonCaps.Referral.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CartoonCaps.Referral.Infrastructure.Migrations
{
    [DbContext(typeof(ReferralContext))]
    partial class ReferralContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CartoonCaps.Referral.Domain.Entities.ReferralRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RefereeId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferralStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReferrerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RefereeId")
                        .IsUnique();

                    b.HasIndex("ReferrerId");

                    b.HasIndex("RefereeId", "ReferrerId")
                        .IsUnique();

                    b.ToTable("ReferralRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RefereeId = 2,
                            ReferralStatus = "Pending",
                            ReferrerId = 1
                        });
                });

            modelBuilder.Entity("CartoonCaps.Referral.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReferralCode")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe",
                            ReferralCode = "ABC123"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Smith",
                            ReferralCode = "XYZ789"
                        });
                });

            modelBuilder.Entity("CartoonCaps.Referral.Domain.Entities.ReferralRecord", b =>
                {
                    b.HasOne("CartoonCaps.Referral.Domain.Entities.User", "Referee")
                        .WithOne("RefereeRecord")
                        .HasForeignKey("CartoonCaps.Referral.Domain.Entities.ReferralRecord", "RefereeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CartoonCaps.Referral.Domain.Entities.User", "Referrer")
                        .WithMany("ReferrerRecords")
                        .HasForeignKey("ReferrerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referee");

                    b.Navigation("Referrer");
                });

            modelBuilder.Entity("CartoonCaps.Referral.Domain.Entities.User", b =>
                {
                    b.Navigation("RefereeRecord");

                    b.Navigation("ReferrerRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
